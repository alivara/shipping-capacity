"""add auto uuid and create at and update at

Revision ID: b6d2f47fc83c
Revises: 21cd0e8f00f7
Create Date: 2025-10-26 21:45:44.457133

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b6d2f47fc83c"
down_revision: Union[str, None] = "21cd0e8f00f7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Set up UUID extension
    op.execute('CREATE EXTENSION IF NOT EXISTS "uuid-ossp";')
    op.alter_column(
        "sailings",
        "id",
        server_default=sa.text("uuid_generate_v4()"),
        existing_type=sa.dialects.postgresql.UUID(as_uuid=True),
        existing_nullable=False,
    )

    # Set default for created_at and updated_at
    op.alter_column(
        "sailings",
        "created_at",
        server_default=sa.text("CURRENT_TIMESTAMP"),
        existing_type=sa.DateTime(),
        existing_nullable=False,
    )
    op.alter_column(
        "sailings",
        "updated_at",
        server_default=sa.text("CURRENT_TIMESTAMP"),
        existing_type=sa.DateTime(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "sailings",
        "id",
        server_default=None,
        existing_type=sa.dialects.postgresql.UUID(as_uuid=True),
        existing_nullable=False,
    )
    op.alter_column(
        "sailings",
        "created_at",
        server_default=None,
        existing_type=sa.DateTime(),
        existing_nullable=False,
    )
    op.alter_column(
        "sailings",
        "updated_at",
        server_default=None,
        existing_type=sa.DateTime(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
